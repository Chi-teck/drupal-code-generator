_dcg()
{
    local cur script coms opts com
    COMPREPLY=()
    _get_comp_words_by_ref -n : cur words

    # for an alias, get the real script behind it
    if [[ $(type -t ${words[0]}) == "alias" ]]; then
        script=$(alias ${words[0]} | sed -E "s/alias ${words[0]}='(.*)'/\1/")
    else
        script=${words[0]}
    fi

    # lookup for command
    for word in ${words[@]:1}; do
        if [[ $word != -* ]]; then
            com=$word
            break
        fi
    done

    # completing for an option
    if [[ ${cur} == --* ]] ; then
        opts="--help --verbose --version --ansi --no-ansi --working-dir --answer --dry-run --full-path --destination --replace"

        case "$com" in

            _complete)
            opts="${opts} --shell --input --current --symfony"
            ;;

            completion)
            opts="${opts} --debug"
            ;;

            composer)
            opts="${opts} "
            ;;

            controller)
            opts="${opts} "
            ;;

            field)
            opts="${opts} "
            ;;

            generate-completion)
            opts="${opts} --shell"
            ;;

            help)
            opts="${opts} --format --raw"
            ;;

            hook)
            opts="${opts} "
            ;;

            install-file)
            opts="${opts} "
            ;;

            javascript)
            opts="${opts} "
            ;;

            layout)
            opts="${opts} "
            ;;

            list)
            opts="${opts} --raw --format --short"
            ;;

            module)
            opts="${opts} "
            ;;

            navigation)
            opts="${opts} "
            ;;

            phpstorm-metadata)
            opts="${opts} "
            ;;

            plugin-manager)
            opts="${opts} "
            ;;

            render-element)
            opts="${opts} "
            ;;

            service-provider)
            opts="${opts} "
            ;;

            template)
            opts="${opts} "
            ;;

            theme)
            opts="${opts} "
            ;;

            theme-settings)
            opts="${opts} "
            ;;

            console:dcg-command)
            opts="${opts} "
            ;;

            console:symfony-command)
            opts="${opts} "
            ;;

            entity:bundle-class)
            opts="${opts} "
            ;;

            entity:configuration)
            opts="${opts} "
            ;;

            entity:content)
            opts="${opts} "
            ;;

            form:config)
            opts="${opts} "
            ;;

            form:confirm)
            opts="${opts} "
            ;;

            form:simple)
            opts="${opts} "
            ;;

            misc:apache-virtual-host)
            opts="${opts} "
            ;;

            misc:nginx-virtual-host)
            opts="${opts} "
            ;;

            plugin:action)
            opts="${opts} "
            ;;

            plugin:block)
            opts="${opts} "
            ;;

            plugin:ckeditor)
            opts="${opts} "
            ;;

            plugin:condition)
            opts="${opts} "
            ;;

            plugin:constraint)
            opts="${opts} "
            ;;

            plugin:entity-reference-selection)
            opts="${opts} "
            ;;

            plugin:field:formatter)
            opts="${opts} "
            ;;

            plugin:field:type)
            opts="${opts} "
            ;;

            plugin:field:widget)
            opts="${opts} "
            ;;

            plugin:filter)
            opts="${opts} "
            ;;

            plugin:menu-link)
            opts="${opts} "
            ;;

            plugin:migrate:destination)
            opts="${opts} "
            ;;

            plugin:migrate:process)
            opts="${opts} "
            ;;

            plugin:migrate:source)
            opts="${opts} "
            ;;

            plugin:queue-worker)
            opts="${opts} "
            ;;

            plugin:rest-resource)
            opts="${opts} "
            ;;

            plugin:views:argument-default)
            opts="${opts} "
            ;;

            plugin:views:field)
            opts="${opts} "
            ;;

            plugin:views:style)
            opts="${opts} "
            ;;

            service:access-checker)
            opts="${opts} "
            ;;

            service:breadcrumb-builder)
            opts="${opts} "
            ;;

            service:cache-context)
            opts="${opts} "
            ;;

            service:custom)
            opts="${opts} "
            ;;

            service:event-subscriber)
            opts="${opts} "
            ;;

            service:logger)
            opts="${opts} "
            ;;

            service:middleware)
            opts="${opts} "
            ;;

            service:param-converter)
            opts="${opts} "
            ;;

            service:path-processor)
            opts="${opts} "
            ;;

            service:request-policy)
            opts="${opts} "
            ;;

            service:response-policy)
            opts="${opts} "
            ;;

            service:route-subscriber)
            opts="${opts} "
            ;;

            service:theme-negotiator)
            opts="${opts} "
            ;;

            service:twig-extension)
            opts="${opts} "
            ;;

            service:uninstall-validator)
            opts="${opts} "
            ;;

            test:browser)
            opts="${opts} "
            ;;

            test:kernel)
            opts="${opts} "
            ;;

            test:nightwatch)
            opts="${opts} "
            ;;

            test:unit)
            opts="${opts} "
            ;;

            test:webdriver)
            opts="${opts} "
            ;;

            yml:breakpoints)
            opts="${opts} "
            ;;

            yml:links:action)
            opts="${opts} "
            ;;

            yml:links:contextual)
            opts="${opts} "
            ;;

            yml:links:menu)
            opts="${opts} "
            ;;

            yml:links:task)
            opts="${opts} "
            ;;

            yml:module-info)
            opts="${opts} "
            ;;

            yml:module-libraries)
            opts="${opts} "
            ;;

            yml:permissions)
            opts="${opts} "
            ;;

            yml:routing)
            opts="${opts} "
            ;;

            yml:services)
            opts="${opts} "
            ;;

            yml:theme-info)
            opts="${opts} "
            ;;

            yml:theme-libraries)
            opts="${opts} "
            ;;

        esac

        COMPREPLY=($(compgen -W "${opts}" -- ${cur}))
        __ltrim_colon_completions "$cur"

        return 0;
    fi

    # completing for a command
    if [[ $cur == $com ]]; then
        coms="_complete completion composer controller field generate-completion help hook install-file javascript layout list module navigation phpstorm-metadata plugin-manager render-element service-provider template theme theme-settings console:dcg-command console:symfony-command entity:bundle-class entity:configuration entity:content form:config form:confirm form:simple misc:apache-virtual-host misc:nginx-virtual-host plugin:action plugin:block plugin:ckeditor plugin:condition plugin:constraint plugin:entity-reference-selection plugin:field:formatter plugin:field:type plugin:field:widget plugin:filter plugin:menu-link plugin:migrate:destination plugin:migrate:process plugin:migrate:source plugin:queue-worker plugin:rest-resource plugin:views:argument-default plugin:views:field plugin:views:style service:access-checker service:breadcrumb-builder service:cache-context service:custom service:event-subscriber service:logger service:middleware service:param-converter service:path-processor service:request-policy service:response-policy service:route-subscriber service:theme-negotiator service:twig-extension service:uninstall-validator test:browser test:kernel test:nightwatch test:unit test:webdriver yml:breakpoints yml:links:action yml:links:contextual yml:links:menu yml:links:task yml:module-info yml:module-libraries yml:permissions yml:routing yml:services yml:theme-info yml:theme-libraries"

        COMPREPLY=($(compgen -W "${coms}" -- ${cur}))
        __ltrim_colon_completions "$cur"

        return 0
    fi
}

complete -o default -F _dcg dcg
