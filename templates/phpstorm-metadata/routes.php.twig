<?php declare(strict_types = 1);

namespace PHPSTORM_META {

  registerArgumentsSet('routes',
{% for route in routes %}
{# Use `raw` filter because some route names contain HTML entities, i.e. '<front>'. #}
    '{{ route|raw }}',
{% endfor %}
  );
  expectedArguments(\Symfony\Component\Routing\RouteCollection::get(), 0, argumentsSet('routes'));
  expectedArguments(\Symfony\Component\Routing\RouteCollection::remove(), 0, argumentsSet('routes'));
  expectedArguments(\Drupal\Core\Url::__construct(), 0, argumentsSet('routes'));
  expectedArguments(\Drupal\Core\Url::fromRoute(), 0, argumentsSet('routes'));
  expectedArguments(\Drupal\Core\Link::createFromRoute(), 1, argumentsSet('routes'));
  expectedReturnValues(\Drupal\Core\Url::getRouteName(), argumentsSet('routes'));
  expectedReturnValues(\Drupal\Core\Routing\RouteMatchInterface::getRouteName(), argumentsSet('routes'));
  expectedReturnValues(\Drupal\Core\Menu\ContextualLinkInterface::getRouteName(), argumentsSet('routes'));
  expectedReturnValues(\Drupal\Core\Menu\LocalActionInterface::getRouteName(), argumentsSet('routes'));
  expectedReturnValues(\Drupal\Core\Menu\LocalTaskInterface::getRouteName(), argumentsSet('routes'));
  expectedReturnValues(\Drupal\Core\Menu\MenuLinkInterface::getRouteName(), argumentsSet('routes'));
  expectedReturnValues(\Drupal\Core\Form\FormStateInterface::setRedirect(), argumentsSet('routes'));

}
